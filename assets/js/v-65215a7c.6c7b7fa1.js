(self.webpackChunkwheel=self.webpackChunkwheel||[]).push([[884],{4747:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-65215a7c",path:"/js/copy-deep.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"js/copy-deep.md",git:{updatedTime:1616397701e3,contributors:[]}}},1252:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>o});var p=a(6252);const t={class:"language-javascript ext-js line-numbers-mode"},e=(0,p.uE)('<pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">__copy_deep</span><span class="token punctuation">(</span><span class="token parameter">origin</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> newObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> origin<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        newObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> origin<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> origin<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token function">__copy_deep</span><span class="token punctuation">(</span>origin<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> origin<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// test</span>\n<span class="token keyword">var</span> schoolObj <span class="token operator">=</span> <span class="token punctuation">{</span>\n    middle<span class="token operator">:</span> <span class="token string">&#39;first middle school&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> workArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;ym&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cfy&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token punctuation">{</span>\n        first<span class="token operator">:</span> <span class="token string">&#39;shao&#39;</span><span class="token punctuation">,</span>\n        last<span class="token operator">:</span> <span class="token string">&#39;suo&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>\n    school<span class="token operator">:</span> schoolObj<span class="token punctuation">,</span>\n    work<span class="token operator">:</span> workArr<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">var</span> copyObj <span class="token operator">=</span> <span class="token function">__copy_deep</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>copyObj<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div>',2),o={render:function(n,s){return(0,p.wg)(),(0,p.j4)("div",t,[e])}}}}]);